echo $EDITOR
visudo
sudo visudo
dirs -v
dirs
llf
lls
nvim zsh
paru zsh-autoc
paru -Rncs zsh-autocomplete-git
zsh/plugins
git clone https://github.com/zsh-users/zsh-completions
git 
cd fastfetch
.
git rm --cached zsh/plugins/zsh-completions
git rm --cached zsh/plugins/zsh-completions -f
git submodule add https://github.com/zsh-users/zsh-completions zsh/plugins/zsh-completions 
git commit -m 'reworked zsh structure'
mv .p10k.zsh zsh
git commit -m 'p10k moved'
nvim user-dirs.dirs
git commit -m 'removed unusued XDG_DIR'
rm -rf oh-my-zsh
rm -rf wallpaper
ln -sf ../dotfiles/waybar waybar
ls -sf $DOTFILES/waybar waybar
ls -sf "$DOTFILES/waybar" waybar
lS -SF "$dotfiles/WAYBAR" waybar
.config
ln -sf "$DOTFILES/waybar" waybar
ln -sf $DOTFILES/waybar waybar
rm -rf waybar
ln -sf ~/dotfiles/waybar waybar
exit
git pull origin main
git submodule update --recursive --remote
git add --all 
cargo t --bin 09 -- --nocapture
git commit -m 'created env=DOTFILES'
git add --all && git commit -m 'finished day 9'&& git push
cargo download 10
nvim .config/discord/settings.json
reflector
reflector > /etc/pacman.d/mirrorlist
sudo reflector > /etc/pacman.d/mirrorlist
paru discor
sudo pacman -Syyu
sudo pacman -Syu
nvim a.test
cat Capoccia/tokenScuola.txt
sudo mount /mnt/Capoccia
l Capoccia/
l Capoccia/_ISo
ls /mnt
sudo mount /dev/sdc1 /mnt/USB
nvim dotfiles/rofi/config.rasi
rofi
git add --all && git commit -m '.' && git push
git push origin HEAD:main
git branch main
git checkout maiN
git checkout ccab333
git push origin main
git push origin main --force
gh push
nvim lua/plugins/init.lua
cp lua ../nvim-2/
cp -r lua ../nvim-2/
cp LICENSE ../nvim-2/
cp README.md ../nvim-2/
cp lazy-lock.json ../nvim-2/
cd ..
rm -rf nvim
git submodule status
nvim .gitmodules
mkdir nvim
git pull --recurse-submodules
mv nvim-2 ~/
gh repo clone
gh repo clone EzBl4ck/dotfiles
gh repo clone EzBl4ck/dotfiles dotfiles --recursive
gh repo clone EzBl4ck/dotfiles dotfiles --recurse-submodules
rm -rf dotfiles/nvim/LICENSE
rm -rf dotfiles/nvim/README.md
rm -rf dotfiles/nvim/init.lua
rm -rf dotfiles/nvim/lua
cp nvim-2/* dotfiles/nvim
cp -r nvim-2/* dotfiles/nvim
ls dotfiles/nvim
mkdir lua
mv bootstrap.lua lua
mv core lua
mv plugins lua
nvim init.lua
rm -rf ~/nvim-2
cp * ../nvim.bak/
mkdir ../nvim.bak/
cp -r ./* ../nvim.bak/
l ../nvim.bak
ll ../nvim.bak
ls -la ../nvim.bak
git commit -m 'copilot'
git remote set-url origingit@github.com:EzBl4ck/nvim.git
git remote set-url origin git@github.com:EzBl4ck/nvim.git
rm -rf ../nvim.bak
git commit -m "Switch submodule to main branch"
git submodule sync
git submodule init
git submodule update --remote --merge
git submodule set-url nvim git@github.com:EzBl4ck/nvim.git
git add nvim
git commit -m "Update submodule URL"\
git push
git commit -m "Update submodule URL"\

cat .gitmodules
cd nvim
cp Downloads/archlinux-2023.12.01-x86_64.iso Capoccia/_ISO
rm Capoccia/_ISO/archlinux-x86_64.iso
l Capoccia/_ISO
cp Downloads/archlinux-2023.12.01-x86_64.iso /mnt/USB/_ISO
l /mnt/USB/_ISO
rm /mnt/USB/_ISO/archlinux-x86_64.iso
pacman -Qe > dotfiles/pacman-packages-log.txt
cargo t --bin 10 -- --nocvapture
cargo t --bin 10 -- --nocapture
cargo solve 10 --release
Rust/AdventOfCode2023
nvim zsh/.zshrc
git commit -m 'enabled=false' codeium
git commit -m 'enabled=false codeium'
ls -l .config
ls dotfiles/fastfetch
rm .config/fastfetch
ls .config
fastfetch --gen-config
cp -r dotfiles/fastfetch .config/
rm -rf .config/fastfetch
ln -s dotfiles/fastfetch .config/fastfetch
sudo pacman -S kitty
git clone https://aur.archlinux.org/paru.git
cd paru
pwd
rustup show
rustup default
rustup toolchain
rustup toolchain install nightly
makepkg -si
paru powerlevel
ls -lah /
ls /etc/xdg/user-dirs.defaults
cat /etc/xdg/user-dirs.defaults
cat /etc/mkinitcpio.conf
cd dotfiles
nvim zsh/.zshenv
zsh
zsh/
nvim hypr/hyprland.conf
nvim zsh/.zprofile
EzBl4ck
git remote set-url origin 
mkdir .ssh
mv .ssh ~
ls -la ~
cp -r tmp/fede/.ssh ~/
ls ~/.ssh
ls -lah ~/.ssh
cat ~/.ssh/id_rsa
ls tmp
ls tmp/
rm -rf tmp
git remote set-url origin git@github.com:EzBl4ck/dotfiles.git
ls -l
mv ~/.config/user-dirs.dirs .
cat user-dirs.dirs
ls ~/.c
ln -sf user-dirs.dirs ~/.config/user-dirs.dirs
ls ~/.config
ln -sf ~/dotfiles/user-dirs.dirs ~/.config/user-dirs.dirs
ln -sf ~/dotfiles/fastfetch ~/.config/fastfetch
l ~/.config
fastfetch
git commit -m 'fastfetch update'
cat /etc/systemd/system/getty@tty1.service.d/autologin.conf
cat /etc/systemd/system/getty@tty1.service.d/autologin.conf >> installation.txt
echo /etc/systemd/system/getty@tty1.service.d >> installation.txt
nvim installation.txt
mv installation.txt dotfiles
git add installation.txt
git commit -m 'installation.txt'
sudo nvim /etc/paru.conf
nvim dotfiles/installation.txt
ll dotfiles
cat dotfiles/pacman-packages-log.txt
mkdir dotfiles/install
mv pac* install
ls install
mv installation.txt install
install
install/
paru mesa
sudo pacman -S cmake wget curl zip unzip clang
paru directx-head
cd dotfiles/install
pacman -Qe > baseTTYinstall.txt
cat baseTTYinstall.txt
nvim baseTTYinstall.txt
sudo pacman _Qe
sudo pacman -Qe
sudo pacman -Syy
sudo pacman -Q
sudo pacman -Q > less
less < sudo pacman -Q
sudo pacman -Q | less
sudo pacman -Qe | less
paru mesa-git
paru blueman
paru pavuconr
paru pavucon
paru bluez
paru cliphi
paru corectrl
paru discord
paru dunst
sudo pacman -S fd figlet fontforge
sudo pacman -S gamemode 
paru grim
sudo pacman -S gtk3 gtk4
sudo pacman -S gtk4
sudo pacman -S gtkmm3
sudo pacman -S gtkmm4
sudo pacman -S gtkmm-4.0
sudo pacman -S jdk-openjdk
sudo pacman -S lib32-gamemode lib32-mangohud
sudo pacman -S gamemode mangohud
sudo pacman -S noto-fonts-emoji
sudo pacman -S npm
sudo pacman -S obs-studio
sudo pacman -S pamixer papirus-icon-theme
paru pkgfile
sudo pacman -S qt5-wayland
sudo pacman -S qt6-wayland
paru polkit
paru ripgrep
paru slurp
paru steam
paru swayidle
paru nemo
paru files
paru gnome files
paru naut
paru kde
paru thunar
paru v4l2
paru lib32 pipewire
paru wine
paru wireplumber
paru rofi
paru rofi wayland
paru brave
paru hyprp
paru hyprpicker
paru nwg-look
paru orchis
paru proton-ge
paru spotify
paru swww
paru winetricks
paru wlroots
ln -sf ~/dotfiles/kitty .config/kitty
ln -sf ~/dotfiles/hypr .config/hypr
ln -sf ~/dotfiles/btop ~/.config/btop
ln -sf ~/dotfiles/gtk-3.0 ~/.config/gtk-3.0
ln -sf ~/dotfiles/gtk-4.0 ~/.config/gtk-4.0
ln -sf ~/dotfiles/rofi ~/.config/rofi
ln -sf ~/dotfiles/wal ~/.config/wal
ln -sf ~/dotfiles/wallpaper ~/.config/wallpaper
ln -sf ~/dotfiles/waybar ~/.config/waybar
sudo pacman -Qe > install/fullPackages.txt
la
lla
l -a
Downloads
unzip FiraCode.zip
rm F*.ttf
rm LICENSE
mkdir FiraCodeNerd
FiraCodeNerd
unzip ../FiraCode.zip
mkdir NotoNerd
NotoNerd
unzip ../Noto.zip
mkdir UbuntuNerd
UbuntuNerd
unzip ../Ubuntu.zip
rm *.zip
rm README.md
sudo mkdir -p /usr/local/share/fonts
sudo mkdir -p /usr/local/share/fonts/otf
sudo mkdir -p /usr/local/share/fonts/ttf
sudo mv FiraCodeNerd /usr/local/share/fonts/ttf
sudo mv NotoNerd /usr/local/share/fonts/ttf
sudo mv UbuntuNerd /usr/local/share/fonts/ttf
sudo fc-cache -fv
mkdir tmp
sudo mount /dev/sdb3 tmp
sudo umount /dev/sdb3
l tmp
nvim tmp/etc/fstab
ls tmp/etc/polkit-1/rules.d
sudo ls tmp/etc/polkit-1/rules.d
mkdir -p /mnt/{Data,Windows}
sudo mkdir -p /mnt/{Data,Windows}
sudo mount /dev/sda1 /mnt/Data
l /mnt/Data/
ls -sf /mnt/Data ./Data
mkdir Data
ls -sf /mnt/Data Data
l Data/.
cd /etc/polkit-1/rules.d
sudo cd /etc/polkit-1/rules.d
/etc/polkit-1/rules.d
/etc/polkit-1/
ls rules.d
sudo -i
l dotfiles/nvim
gitsub
npm install -g neovim
paru treesitter
npm install treesitter
sudo npm install treesitter
sudo npm install -g neovim
sudo npm install -g nvim
sudo nivm /etc/fstab
cd /mnt
cd 
ls Data
ln -sf /mnt/Data/. Data
ln -sf /mnt/Data/ Data
ls Data/
ls Data/Data
rm Data
rm -m Data
rm -r Data
ln -sf /mnt/Data Data
l Data
l Data/
paru github
paru github cli
gh auth login
gh auth
gh auth setup-git
gh auth status
nvim dotfiles/fastfetch/config.jsonc
rm -rf paru
paru goverlay
l .config
l dotfiles
paru intelliJ
paru Dejavu
mkdir Tomcat10
mv apache-tomcat-10.1.17.tar.gz Tomcat10
tar -xf apache-tomcat-10.1.17.tar.gz
mv apache-tomcat-10.1.17 ~
rm -fr Tomcat10
mv apache-tomcat-10.1.17 Tomcat10
Tomcat10
bin
cat .local/share/Steam/steamapps/common
pacman -S progress
sudo pacman -S progress
progress
dmesg
sudo dmesg
sudo dmesg | grep samsung
sudo dmesg | grep ssd
sudo dmesg | grep nvme
lsmode | grep nvme
sudo lsmod | grep nvme
paru gnome-disk
sudo mount /dev/sdb3 /mnt/Windows
ln -sf /mnt/Windows Windows
l .local/share/Steam/steamapps/common
rm -rf .local/share/Steam/steamapps/common
mv Windows/fede/.local/share/Steam/steamapps/common .local/share/Steam/steamapps/
ln -sf ~/.local/share/Steam/steamapps/common SteamLibrary
l SteamLibrary
rm -rf SteamLibrary/Apex\ Legends
ls -lah SteamLibrary/Starfield
ls -lah SteamLibrary/ELDEN\ RING/Game
l SteamLibrary/
l SteamLibrary/LEGO\ Lord\ of\ the\ Rings
l SteamLibrary/ELDEN\ RING
l SteamLibrary/ELDEN\ RING/Game
paru btrfs-ass
sudo btrfs subvolume list /
sudo btrfs subvolume delete /.snapshotSa
sudo btrfs subvolume get-default /
ls -la
l /.snapshots
ls -la /.snapshots
sudo nvim /etc/snapper/configs/root
sudo systemctl enable snapper-timeline
sudo systemctl start snapper-timeline
sudo systemctl start snapper-cleanup.timer
sudo systemctl start snapper-timeline.timer
sudo systemctl status snapper-timeline.timer
sudo systemctl status snapper-cleanup.timer
ewboot
xrandr
sudo mount /dev/sdb2 tmp
l tmp/
sudo mount /dev/sdb3 tmp/home/
l tmp/home/fede
l tmp/home/fede/Coding
l tmp/home/fede/Documents
ll tmp/home/fede/Documents
ll tmp/home/fede/Downloads
ll tmp/home/fede/Music
ll tmp/home/fede/Pictures
mv tmp/home/fede/Pictures/* Pictures
ll Pictures
ll tmp/home/fede/
ll tmp/home/fede/.minecraft
ll tmp/home/fede/.ssh
ll .ssh
ll tmp/home/fede/PrismLauncherInstances
ll tmp/home/fede/PrismLauncherInstances/
mv tmp/home/fede/PrismLauncherInstances/Divine\ Journey\ 2 ~
paru jdk
paru Prism
paru Prismla
cd .local/share/PrismLauncher/instances
ln -sf ~/.local/share/PrismLauncher/instances ~/PrismInstances
mv ~/Divine\ Journey\ 2 .
ll tmp
umount tmp
sudo umount -R tmp
os-prober
sudo os-prober
sudo grub-mkconfig -o /boot/grub/grub.cfg
blkid
l Windows
sudo reboot
lsblk -o name,mountpoint,label,size,uuid
l /mnt
systemctl status data.mount
2
sudo mount /mnt/Windows
nvim dotfiles/zsh/.zprofile
paru ntfs3
l Windows/
paru -Rns snapper-gui-git
paru -Rncs snapper-gui-git
claer
hwclock --systohc
sudo hwclock --systohc
timedatectl set-ntp true
sudo timedatectl set-ntp true
timedatectl
l Downloads
ll Downloads
paru code
paru vscode
mkdir .api
.api
nvim OpenAiKey.key
chmod 600 OpenAiKey.key
echo $OpenAiKey
echo $OPENAI_API_KEY
chmod 600 .api
chmod 755 .api
touch test.js
sudo npm install -g eslint
gh repo clone AdventOfCode2023
paru aoc
gh repo clone Rust
Rust
rm -rf AdventOfCode2023
cargo solve
cargo solve 7
cargo solve 6
RUST_BACKTRACE=1 cargo solve 6
cargo scaffold 10
cargo scaffold 9
cargo solve 10
paru aoc-cli
cargo install aoc-cli
echo "53616c7465645f5f49ffccbc9edd891a661e5844f4bc824e58fc24cb239015d3dbbcba79116829c93a0a32bc5c180888f8111e49dd4ecf201812ede22a37cb9a" > ~/.adventofcode.session
cargo download 9
cargo solve 9
cargo solve 9 --release
sww 
swww img dotfiles/wallpaper/default.png
git add --all
git stash all
git stash --all
paru defaultapp
paru default
paru defaultap
paru neovim
nvim-qt --version
vim
export NVIM_QT_RUNTIME_PATH=/usr/share/nvim-qt/runtime/plugin/nvim_gui_shim.vim
export NVIM_QT_RUNTIME_PATH=/usr/share/nvim-qt/runtime/
echo $NVIM_QT_RUNTIME_PATH
nvim-qt
paru npm
paru tar
npm build run
npm install -g serve
sudo npm install -g serve
serve -s build
npm run build
npm run
npm run start
npm run dev
paru live-server
npm install -g live-server
sudo npm install -g live-server
live-server
paru maven
sudo pacman -Qe > dotfiles/install/fullPackages.txt
TPS/Dec14
mvn
Dec14/src
mvn clean package ..
mvn clean package
tlsr mvn
tldr mvn
npx create-ract-app my-app
sudo npx create-ract-app my-app
npm
npx
paru node
paru nodejs
npx create-react-app
npx create-react-app my-app
cd my-app
rm -rf my-app
npx create-next-app@latest nextjs-dashboard --use-npm --example "https://github.com/vercel/next-learn/tree/main/dashboard/starter-example"
cd nextjs-dashboard
rm -rf nextjs-dashboard
sudo npm install -g liveserver
gh repo clone Informatica
cd Informatica
05_10
03_10
es1
paru yarn
es7
cd ~/
git stash drop
TPS
Dec14
rm -rf TPS
gh repo clone TPS
paru -Rncs intellij-idea-community-edition
paru xmapp
paru xampp
xampp start
sudo xampp start
xmapp stop
xampp stop
sudo xampp stop
clang++ test.cpp && a.out
ADv
Cpp
nvim ../dotfiles/kitty/kitty.conf
paru source code
paru source code nerd
dotfiles/scripts/fontsearch.sh
dotfiles/scripts/fontsearch.sh | grep Source
clang++ -pedantic test.cpp && ./a.out
nvimd ../dotfiles/zsh/.zshrc
nvim ../dotfiles/zsh/.zshrc
clang++ test.cpp && ./a.out
clang++ test.cpp
ncim
clang++ test.cpp&& ./a.out
cat ../dotfiles/hypr/hyprland.conf
l AdventOfCode2023/src
cat AdventOfCode2023/src/day.rs
cat AdventOfCode2023/src/main.rs
cargo run --bin 7
cargo run --bin 07
Aoc
mv src/bin src/2023
fede
nvim 
sudo systemctl enable bluetooth
sudo systemctl start bluetooth
bluetoothctl scan on
cargo run year2022
cargo ru
cargo run 
cargo run year2023
cargo run --bin year2023 
cargo run --bin 02 
cargo run --bin 2023
cargo run year2023 --bin 01
cargo run -p year2023 --bin 02
cargo run -p year2023 --bin 01
cargo run -p year2023
cargo run -p year2022
cargo run -p year2022 --bin 01
year2022
cargo run --bin 02
cargo run --bin 01
aoclib
cargo build --release
cargo run --release
RUST_BACKTRACE=1 cargo run
mv C++/.clangd dotfiles
rm -rf C++
gh repo clone AdventOfCode AoC
l AdventOfCode2023
l AoC
cat AoC/.gitignore
cargo new advent_of_code
l advent_of_code
ll advent_of_code
mv advent_of_code/* .
rm -rf advent_of_code
git remote -v
mv src/lib.rs .
rm Cargo.*
rm src
cargo new year2022
cargo new 2023
cargo new year2023
cargo new aoc-lib --lib
l aoc-lib
mv lib.rs aoc-lib/src/lib.rs
paru tree
rm -rf target
cargo run -p year2023 
year2023 && cargo run -p year2023 
swww ini
swww init
year 2023
year2023
cargo run
AoC
cargo download 1
paru firefox
cat dotfiles/hypr/hyprland.conf
kill waybar
waybar &&
hyprctl dispatch
paru Sqlite
sqlite
sqlite3
sqlite3 open
sqlite3 open /home/fede/.mozilla/firefox/bm713vmv.default-release/favicons.sqlite
paru sqlitebrowser
sudo sqlitebrowser
sqlitebrowser
rm -rf AoC
mkdir C++
cp ../dotfiles/.clangd .
paru -Rncs brave-bin
chmod +x build.sh
c++
c++ --version
cmake
cmake .
cmake build
cmake src/Main.cpp
cmake src
cmake -DCMAKE_BUILD_TYPE=Release
whereis clang
whereis clang++
make -v
mc .clangd Learning
mv .clangd Learning
cmake -DCMAKE_BUILD_TYPE=Debug
cmake -DCMAKE_BUILD_TYPE=Debug CMakeLists.txt
cpprelease && ./Learning
paru meson
meson build meson.build
meson build build
meson compile build
cd build
meson compile
./build/Tutorial
./build.sh
build
cmake ../
make build
make build/.
make
make .
make build/Makefile
mkdir Learn
rm -r Learn
mkdir Tutorial
meson
meson Tutorial
Tutorial
;
nvim meson.build
meson build
rm -rf Tutorial
cmake ..
cppdebug
cppdebug && ./Learning
nvim ~/dotfiles/zsh
cppdebug && ./out/Learning
cpprelease && ./out/Learning
cpprelease --verbose
cmake 
cmake  --verbose
cmake .. --verbose
cmake .. --help
cmake -G Ninja
rm -rf *
cmake -G Ninja ..
nvim build.ninja
nvim ~/dotfiles/zsh/.zshrc
cpprelease
../Learning
../out/Learning
 cd "/home/fede/C++/Learning/out/Debug/" &&  "/home/fede/C++/Learning/out/Debug/Learning" 
L
nvim Demo/
mkdir Demo
Demo
rm compile_commands.json
rm -r out
echo "Hello World"
dotfiles/zsh
nvim .zshrc
ecoh 'hello'
echo "Hello"
echo "hello"
echo Hello
nvim nvim/
cmake -B /home/fede/C++/Learning/out/Debug -S . -D CMAKE_BUILD_TYPE:STRING=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=1
cmake --build /home/fede/C++/Learning/out/Debug --target Learning
exit $?
git add lua/plugins/configs/treesitter.lua
git add lua/plugins/configs/lsp.lua
git commit -m '.'
git push
gi restore --all
git restore --all
git restore lua/*
git pull --rebase
rm -rf lua/plugins/configs/overseer.lua
rm -rf lua/plugins/configs/cmake-tools.lua
rm -rf lua/core/commands.lua
nvim]
C++/Lea
cd out && cmake -G Ninja -DCMAKE_BUILD_TYPE= ../CMakeLists.txt && ninja && cd ..
cd out && cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ../CMakeLists.txt && ninja && cd ..
cat dotfiles/zsh/.zshrc
nvim dotfiles/zsh/.zshrc
mkdir test
rm -rf test
rm open
rm '-pedantic*'
rm -pedantic\ -Wall\ -Weffc++\ -Wextra\ -Wconversion\ -Wsign-conversion\ -Wdouble-promotion
rm \-pedantic\ -Wall\ -Weffc++\ -Wextra\ -Wconversion\ -Wsign-conversion\ -Wdouble-promotion
Ler
rm -rf compile_commands.json
tree.
out
ninja build.ninja
ninja -o A build.ninja
rm -rf Learning
cd out && cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug ../CMakeLists.txt && ninja && cd ..
./out/Learning
mkdir out
mkdir -p out/{Release,Debug}
cd out/Debug && cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug ../../CMakeLists.txt && ninja && cd ../..
cd out/Release && cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ../../CMakeLists.txt && ninja && cd ../..
sit status
git status
....
systemctl restart bluetooth
tldr cmake
cmake -G Ninja -S . -B out/Release -D CMAKE_BUILD_TYPE=Release
rm -rf out
tldr ninja
systemctl status bluetooth
bluetoothctl
l Debug
Debug
./Learning
cmake -G Ninja -S . -B Release/ -D CMAKE_BUILD_TYPE=Release
rm -rf Release
rm -rf Debug
echo $cc
whereis cc
cc -v
tldr cc
man cc
./bin/Learning
cd Debug
cmake .. -G Ninja
cmake .. -G NinjBa
cmake .. -G Ninja -D CMAKE_BUILD_TYPE=Release
ninja
cmake -G Ninja -S . -B Debug -D CMAKE_BUILD_TYPE=DEBUG && ninja -C Debug
cmake -G Ninja -S . -B Release -D CMAKE_BUILD_TYPE=Release && ninja -C Release
nvim dotfiles/nvim/lua/core/commands.lua
rm compile_commands.json && cmake -G Ninja -S . -B Release -D CMAKE_BUILD_TYPE=Release && ninja -C Release
rm compile_commands.json && cmake -G Ninja -S . -B Debug -D CMAKE_BUILD_TYPE=DEBUG && ninja -C Debug
ln -sf Release/compile_commands.json compile_commands.json
gitacpt
l ~/C++/Learning
paru -Rncs Intellij
paru intellij
paru -Rncs intellij-idea-ultimate-edition
paru clion
arch-meson
paru cc
rm -rf CLionProjects
l IdeaProjects
rm -rf IdeaProjects
nvim /etc/makepkg.conf
cc
cc -version
echo $CXX
cat compile_commands.json
cat compile_commands.json | less
nvim .zshenv
sudo nvim /etc/makepkg.conf
C++/LE
echo $CC
cmake -G Ninja -S . -B Release -D CMAKE_BUILD_TYPE=Release && ninja -C Release && ln -sf Release/compile_commands.json compile_commands.json
paru nvtop
nvtop
dwadad\
adwadwa
rm test.js
rm emails.com
rm -rf TestVSCode
rm -rf Demo
Learning
cmake -G Ninja -S . -B Debug -D CMAKE_BUILD_TYPE=DEBUG && ninja -C Debug && ln -sf Debug/compile_commands.json compile_commands.json
cc --version
./Debug/Learning
cmake -G Ninja -S . -B Release -D CMAKE_BUILD_TYPE=Release && ninja -C Release && ln -sf Release/compile_commands.json .
./Release/Learning
cmake -G Ninja -S . -B Debug -D CMAKE_BUILD_TYPE=Debug && ninja -C Debug && ln -sf Debug/compile_commands.json .
clang++ year2023/01.cpp
clang++ year2023/01.cpp && ./a.out
cp ~/dotfiles/.clangd .
clang++ -std=c++17 -Wall -Wextra -Wpedantic -Werror year2023/01.cp && ./a.out && rm a.out
clang++ -std=c++17 -Wall -Wextra -Wpedantic -Werror year2023/01.cpp && ./a.out && rm a.out
C++/Learning
mkdir AoC++
mkdir inputs/year2023
mkdir -p inputs/year2023
mkdir -p examples/year2023
rm a.out
clang++ -std=c++20 -Wall -Wextra -pedantic -Weffc++ -Wconversion -Wsign-conversion -Wdouble-promotion -O2 year2023/01.cpp && ./a.out && rm a.out
btop
clang++ -std=c++20 -Wall -Wextra -pedantic -Weffc++ -Wconversion -Wsign-conversion -Wdouble-promotion -O2 year2023/01.cpp && ./a.out
dotfiles/nvim
rm -rf a.out
rm -rf src
nvim .gitingore
gh repo init
git init
git branc -m main
git branch -m main
gh repo edit AoC-
gh repo edit 
gh repo list
git remote set-url origin git@github.com:EzBl4ck/AdventOfCpp.git
gh repo view
nvim .gitignore
tree .
./a.out
clang++ -std=c++20 -Wall -Wextra -pedantic -Weffc++ -Wconversion -Wsign-conversion -Wdouble-promotion year2023/01.cpp && ./a.out && rm a.out
C++
AoC++
cp Learning/CMakeLists.txt ~/dotfiles
gh repo
gh auth refresh -h github.com -s delete_repo\ 
gh auth refresh -h github.com -s delete_repo
gh repo delete AdventOfCpp
rm -rf AoC++
rm 
rm -fr .assets
rm -fr .devcontainer
rm -fr .editorconfig
rm -fr .vscode
rm -fr .github
rm -fr README.md
cargo solve 1
cargo solve 1 --release
rustup update
rustup 
rustup default install stable
rustup default install toolchain stable
rustup default install
rustup default stable
rustup
rustup check
AdventOfCode2023
nodejs
node
cargo build
cat ~/.adventofcode.session
nvim Rust
cat .adventofcode.session
cargo aoc help
cargo aoc credentials
cargo aoc credentials 53616c7465645f5f49ffccbc9edd891a661e5844f4bc824e58fc24cb239015d3dbbcba79116829c93a0a32bc5c180888f8111e49d\
d4ecf201812ede22a37cb9a
cargo aoc credentials 53616c7465645f5f49ffccbc9edd891a661e5844f4bc824e58fc24cb239015d3dbbcba79116829c93a0a32bc5c180888f8111e49dd4ecf201812ede22a37cb9a
cargo aoc input
cargo aoc input -d 1 -y 2023
cargo aoc
nvim AdventOfCode2023
cargo install cargo-aoc
gh repo create
AdventOfRust
mkdir src
gh repo edit
git push --set-upstream origin main
git push --set-upstream origin master
git pull
cat README.md
mv AdventOfRust AdventOfRustTemplate
mkdir Dev
mv AdventOf* Dev
l D
mv C++ Dev
mv Rust Dev
mv Informatica Dev
mv TPS Dev
l De
Dev/AdventOfRustTemplate
...
rm -rf AdventOfRust-2023
git clone git@github.com:EzBl4ck/AdventOfRust-2023.git
AD
AdventOfRust-2023
../dotfiles/nvim
nvim btop/btop.conf
paru fastfetch
mkdir .config
ln -sf ~/dotfiles/zsh/.zshenv .
rm -rf .bash*
ll .config
ln -sf ~/dotfiles/fastfetch .config/fastfetch
sudo nvim /etc/mkinitcpio.conf
sudo mkinitcpio -p linux
cat /dev/tty1
sudo cat /dev/tty1
sudo nvim /etc/fstab
sudo nvim /etc/systemd/system/getty@tty1.service.d/autologin.conf
nvim dotfiles/hypr/hyprland.conf
swww img
swww img $HOME/dotfiles/wallpaper/default.png
swww img $HOMEdotfiles/wallpaper/default.png
swww img $(HOME)dotfiles/wallpaper/default.png
nvim dotfiles/hypr
ll nvim
gh repo 
gh repo push
gh
[D
git config --global user.email "federico.capoccia@proton.me"
git config --global user.name "EzBl4ck"
rm -rf dotfiles
gh repo clone dotfiles -R
gh repo clone dotfiles --recurse-submodules
git clone git@github.com:EzBl4ck/dotfiles.git --recurse-submodules
git checkout main
ln -sf ~/dotfiles/nvim ~/.config/nvim
dotfiles/wallpaper
mv default.png blackhole.png
mv dark.png default.png
hyprctl reload
Windows/ToArch/Pic
cp * ~/dotfiles/wallpaper
swww img $($HOME)dotfiles/wallpaper/default.png
.cache/wal
mv schemes ~/dotfiles/wal/colors.d
mv -f schemes ~/dotfiles/wal/colors.d
mv -f colors ~/dotfiles/wal/colors.d
mv -f colors-hyprland.conf ~/dotfiles/wal/colors.d
mv -f colors-kitty.conf ~/dotfiles/wal/colors.d
mv -f colors-rofi-dark.rasi ~/dotfiles/wal/colors.d
mv -f colors-wal.vim ~/dotfiles/wal/colors.d
mv -f colors-waybar.css ~/dotfiles/wal/colors.d
mv -f colors-wlogout.css ~/dotfiles/wal/colors.d
mv -f colors.css ~/dotfiles/wal/colors.d
mv -f colors.json ~/dotfiles/wal/colors.d
mv -f colors.scss ~/dotfiles/wal/colors.d
mv -f colors.sh ~/dotfiles/wal/colors.d
mv -f colors.yml ~/dotfiles/wal/colors.d
mv -f wal ~/dotfiles/wal/colors.d
e\
reboot
pywal
wal -i $($HOME)dotfiles/wallpaper/default.png
nvim dotfiles/waybar/config.jsonc
nvim dotfiles/waybar/style.css
 qa
waybar &
/usr/bin/python3 $(DOTFILES)waybar/scripts/mediaplayer.py 2 > /dev/null
/usr/bin/python3 $($DOTFILES)waybar/scripts/mediaplayer.py 2 > /dev/null
/usr/bin/python3 $(HOME)dotfiles/waybar/scripts/mediaplayer.py 2 > /dev/null
waybar
waybar&
nvim dotfiles
poweroff
nvim dotfiles/zsh/.zshenv
cat /dev/vcs1
echo $HOME
$HOME
$(HOME)
echp $DOTFILES
echo $DOTFILES
sudo stty onlcr
echo $XDG-CURRENT-DESKTOP
$XDG-CURRENT-DESKTOP
ecoh "$XDG-CURRENT-DESKTOP"
echo "$XDG-CURRENT-DESKTOP"
sudo nvim /usr/share/xdg-desktop-portal/hyprland-portals.conf
paru blender
paru glfw
paru glew
paru glad
paru docker
paru kuber
paru kubernetes
.local
sha
share
PrismLauncher
instances
ln -sf ~/.local/share/PrismLauncher/instances ~/PrismLauncherInstances
ll PrismLauncherInstances
paru bat
paru toolbox
sudo cat /dev/vcs1
sudo less /dev/vcs1
sudo less -f /dev/vcs1
paru xdg-desktop
ktop
ln -sf ~/.local/share/Steam/steamapps/ ./SteamApps/ 
ln -sf ~/.local/share/Steam/steamapps/ ./SteamApps
ln -sf ~/.local/share/Steam/steamapps ./SteamApps
progress -w
progress -m
ln -sf ~/.local/share/Steam/steamapps ~/SteamApps 
ll ~
paru glfw wayland
paru xeyes
xeyes
Windows/ToArch/common
ls
mv Apex\ Legends ~/SteamApps/common
mv ELDEN\ RING ~/SteamApps/common
mv Factorio ~/SteamApps/common
mv Lies\ of\ P ~/SteamApps/common
mv Sekiro ~/SteamApps/common
mv Starfield ~/SteamApps/common
mv Dyson\ Sphere\ Program ~/SteamApps/common
mv Divine\ Journey\ 2 ~/PrismLauncherInstances
l common
l Dev
paru keyring hyprland
paru keyring
mv Dev ~
cd .vscode
nvim argv.json
nvim dotfiles/nvim
cd
./hypr/scripts/colors.sh
swww img /home/fede/dotfiles/wallpaper/default.png
chamod +x hypr/scripts/reload_colorscheme.sh
chmod +x hypr/scripts/reload_colorscheme.sh
./hypr/scripts/reload_colorscheme.sh
.cache
wal
wal/
ll
mv * /home/fede/dotfiles/wal/
wal -i /home/fede/dotfiles/wallpaper/default.png
mv * /home/fede/dotfiles/wal/colors.d/
reboot
tree
yes
du SteamApps
df SteamApps
df -h SteamApps
du -h SteamApps
dh -h SteamApps
dd -h SteamApps
SteamApps
common
l
rm -rf DARK\ SOULS\ III
nvim dotfiles/waybar
hyprctl
killall waybar
hyprctl dispatch exec waybar
btrfs subvolume list -p path\

btrfs subvolume list -p /\

sudp btrfs subvolume list -p /\

sudo btrfs subvolume list\

sudo btrfs subvolume list -p /\

sudo nvim /usr/share/snapper/config-templates
snapper -c root create-config /
sudo umount /.snapshots
sudo rm -r /.snapshots
sudo snapper -c root create-config /
sudo snapper -c home create-config /home
sudo snapper -c log create-config /var/log
clear
sudo btrfs subvolume list /\

sudo btrfs subvolume delete /.snapshots
sudo mkdir /.snapshots
cat /etc/fstab
sudo mount -a
lsblk
sudo btrfs subvol list /
sudo btrfs subvol set-default 256 /
sudo btrfs subvol get-default /
sudo grub-install
sudo snapper ls\

paru
snapper
snapper --help
paru snapper
paru inkspace
paru ink
paru inksca
paru gimp
sudo nvim /etc/polkit-1/rules.d/90-corectrl.rules
sudo nvim /etc/default/grub
sudo grub-mkconfig -o /boot/grub/grub.cfg\

paru seahorse
paru dbus
dotfiles
nvim nvim
nvim/
..
gitacp
Dev/Rust/test-rust
nvim ~/dotfiles/nvim
Hyprland --version
paru hyprland
c
nvim
